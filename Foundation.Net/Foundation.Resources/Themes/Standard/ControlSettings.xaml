<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>

    <!-- All Controls -->
    <Style TargetType="{x:Type Window}">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFixedFontFamily}" />
    </Style>

    <Style TargetType="{x:Type Control}">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFixedFontFamily}" />
    </Style>

    <!-- Application Menu -->
    <!--
    <Style TargetType="{x:Type Menu}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FixedFont}" />
    </Style>

    -->
    <!-- Application ToolBar -->
    <!--
    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FixedFont}" />
    </Style>

    -->
    <!-- Application StatusBar -->
    <!--
    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FixedFont}" />
    </Style>

    -->
    <!-- TreeViewItem -->
    <!--
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FixedFont}" />
    </Style>

    -->
    <!-- Button -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource FixedFont}" />
    </Style>

    <!-- DataGrid -->
    <!--<Style TargetType="{x:Type DataGridCell}">
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFixedFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource SmallContentFontSize}" />
    </Style>-->

    <Style TargetType="{x:Type Image}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="RowBackground" Value="{DynamicResource DataGridMainBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridMainForeground}" />
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGridAlternateBackground}" />
        <Setter Property="AlternationCount" Value="2" />
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFixedFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource SmallHeaderFontSize}" />
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridRowSelectedBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource DataGridRowSelectedForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Style.Triggers>
            <Trigger Property="IsRowSelected"  Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridRowSelectedBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource DataGridRowSelectedForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Padding" Value="3, 0, 3, 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True"
                    >
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
