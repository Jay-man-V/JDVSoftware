<UserControl
    x:Class="Foundation.Views.GridViewControl"
    Name="ThisControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    mc:Ignorable="d"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"

    xmlns:controls="clr-namespace:Foundation.Views"
    xmlns:local="clr-namespace:Foundation.Views"
    xmlns:localBehaviours="clr-namespace:Foundation.Views"
        
    d:DesignHeight="400"
    d:DesignWidth="550"
>

    <controls:StdWindowPanel>
        <controls:StdWindowPanel.ToolBar>
            <ToolBarTray IsLocked="True" x:Name="StandardToolBarTray">
                <ToolBar x:Name="StandardToolBar">
                    <controls:ButtonControl
                        Content="{DynamicResource RefreshImage}"
                        Command="{Binding Path=RefreshCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        Visibility="{Binding Path=RefreshButtonVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        IsEnabled="{Binding Path=RefreshButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                    />
                    <Separator Visibility="{Binding Path=RefreshSeparatorVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}" />
                    <controls:ButtonControl
                        Content="{DynamicResource ViewImage}"
                        Command="{Binding Path=ViewCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        CommandParameter="{Binding Path=SelectedItem, ElementName=DataGrid}"
                        Visibility="{Binding Path=ViewButtonVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        IsEnabled="{Binding Path=ViewButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                    />
                    <controls:ButtonControl
                        Content="{DynamicResource AddImage}"
                        Command="{Binding Path=AddCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        Visibility="{Binding Path=AddButtonVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        IsEnabled="{Binding Path=AddButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                    />
                    <controls:ButtonControl
                        Content="{DynamicResource EditImage}"
                        Command="{Binding Path=EditCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        CommandParameter="{Binding Path=SelectedItem, ElementName=DataGrid}"
                        Visibility="{Binding Path=EditButtonVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        IsEnabled="{Binding Path=EditButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                    />
                    <controls:ButtonControl
                        Content="{DynamicResource DeleteImage}"
                        Command="{Binding Path=DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        CommandParameter="{Binding Path=SelectedItem, ElementName=DataGrid}"
                        Visibility="{Binding Path=DeleteButtonVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        IsEnabled="{Binding Path=DeleteButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                    />
                    <Separator Visibility="{Binding Path=RecordEditButtonsVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}" />
                    <controls:ButtonControl
                        Content="{DynamicResource ExportExcelImage}"
                        Command="{Binding Path=ExportGridToExcelCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        CommandParameter="{Binding Path=DataSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        Visibility="{Binding Path=ExportGridToExcelButtonVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        IsEnabled="{Binding Path=ExportGridToExcelButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                    />
                    <controls:ButtonControl
                        Content="{DynamicResource ExportCsvImage}"
                        Command="{Binding Path=ExportGridToCsvCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        CommandParameter="{Binding Path=DataSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        Visibility="{Binding Path=ExportGridToCsvButtonVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                        IsEnabled="{Binding Path=ExportGridToCsvButtonEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                    />
                    <Separator Visibility="{Binding Path=ExportButtonsVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}" />
                </ToolBar>
            </ToolBarTray> 
        </controls:StdWindowPanel.ToolBar>

        <controls:StdWindowPanel.Filter>
            <ContentControl
                Content="{Binding Filter, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                Visibility="{Binding Path=FilterVisible, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}, Converter={StaticResource BoolToVis}}"
            />
        </controls:StdWindowPanel.Filter>

        <controls:StdWindowPanel.Workspace>
            <DataGrid
                x:Name="DataGrid"
                ItemsSource="{Binding DataSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                AutoGenerateColumns="False"
                CanUserAddRows="False"
                CanUserDeleteRows="False"
                CanUserReorderColumns="False"
                IsReadOnly="True"
                GridLinesVisibility="Horizontal"
                SelectedItem="{Binding Path=SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                SelectionMode="Single"
                SelectionUnit="FullRow"
                >
                <DataGrid.Resources>

                    <Style x:Key="HorizontalContextMenu" TargetType="{x:Type ContextMenu}">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Horizontal" Background="Transparent"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContextMenu" >
                                    <Border BorderThickness="0">
                                        <Grid>
                                            <!--<Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>-->

                                            <Path Data="M0,0.5 L1,0.75 1,0.25Z" Margin="0"
                                              Grid.Column="0"
                                              StrokeThickness="0"
                                              Stroke="{TemplateBinding Background}"
                                              Fill="{TemplateBinding Background}" 
                                              Stretch="Fill" 
                                              Width="8" Height="8"
                                              />
                                            
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.Column="1" Orientation="Horizontal" Background="{TemplateBinding Background}"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <ContextMenu x:Key="DataGridContextMenu" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                        <ContextMenu.Items>
                            <!--Header="Copy cell value"-->
                            <MenuItem
                                Header="Copy cell value"
                                Click="MenuItem_OnClick"
                                Command="{Binding CopyCellValueCommand}"
                                >
                                <MenuItem.Icon>
                                    <Image Source="{DynamicResource CopyIcon}" />
                                </MenuItem.Icon>
                            </MenuItem>

                            <!--Header="Copy row as Csv"-->
                            <MenuItem
                                Header="Copy row as Csv"
                                Command="{Binding CopyRowToCsvCommand}"
                                CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                            >
                                <MenuItem.Icon>
                                    <Image Source="{DynamicResource CopyIcon}" />
                                </MenuItem.Icon>
                            </MenuItem>

                            <!--Header="Copy all data as Csv"-->
                            <MenuItem
                                Header="Copy all data as Csv"
                                Command="{Binding CopyGridToCsvCommand}"
                                CommandParameter="{Binding Path=DataSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                            >
                                <MenuItem.Icon>
                                    <Image Source="{DynamicResource CopyIcon}" />
                                </MenuItem.Icon>
                            </MenuItem>

                        </ContextMenu.Items>
                    </ContextMenu>
                </DataGrid.Resources>
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
                        <Setter Property="ContextMenu" Value="{StaticResource DataGridContextMenu}" />
                    </Style>
                </DataGrid.RowStyle>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <b:InvokeCommandAction
                            Command="{Binding Path=SelectedItemChangedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"
                            CommandParameter="{Binding Path=SelectedItem, ElementName=DataGrid}"
                        />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <b:Interaction.Behaviors>
                    <localBehaviours:GridColumnsBindingBehaviour Columns="{Binding GridColumns, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}"/>
                    <localBehaviours:GridRowHeaderBehaviour ShowRowNumber="{Binding ShowRowNumber, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}" />
                </b:Interaction.Behaviors>
            </DataGrid>
        </controls:StdWindowPanel.Workspace>

        <controls:StdWindowPanel.StatusBar>
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Label}">
                        <Setter Property="FontFamily" Value="{DynamicResource DefaultFixedFontFamily}"/>
                        <Setter Property="FontSize" Value="{DynamicResource SmallHeaderFontSize}" />
                    </Style>
                </StackPanel.Resources>
                <controls:LabelControl Content="{Binding StatusBarText, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}" />
                <controls:LabelControl Content="{Binding DataSource.Count, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:GridViewControl}}}" />
            </StackPanel>
        </controls:StdWindowPanel.StatusBar>
    </controls:StdWindowPanel>
</UserControl>
